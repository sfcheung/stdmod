% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stdmod_lavaan.R
\name{stdmod_lavaan}
\alias{stdmod_lavaan}
\title{Standardized Moderation Effect and Bootstrap CI in 'lavaan'}
\usage{
stdmod_lavaan(fit, x, y, w, x_w, boot_ci = FALSE, R = 100, conf = 0.95, ...)
}
\arguments{
\item{fit}{The SEM output by \code{\link[lavaan:lavaan]{lavaan::lavaan()}} or its siblings.}

\item{x}{The name of the independent variable in the model.}

\item{y}{The name of the outcome variable in the model.}

\item{w}{The name of the moderator in the model.}

\item{x_w}{The name of the product term (x * w) in the model.}

\item{boot_ci}{Boolean. Whether nonparametric bootstrapping will be
conducted. Default is \code{FALSE}.}

\item{R}{The number of nonparametric bootstrapping samples. Default is 100.
Set this to at least 2000 in actual use.}

\item{conf}{The level of confidence. Default is .95.}

\item{...}{Optional arguments to be passed to \code{\link[boot:boot]{boot::boot()}}.}
}
\value{
A list of class \code{stdmod_lavaan} with these elements:
\itemize{
\item \code{stdmod}: The standardized moderation effect.
\item \code{ci}: The nonparametric bootstrap confidence interval. \code{NA} if
confidence interval not requested.
\item \code{boot_out}: The raw output from \code{\link[boot:boot]{boot::boot()}}. \code{NA} if
confidence interval not requested.
\item \code{fit}: The original fit object.
}
}
\description{
Compute the standardized moderation effect in a structural
equation model fitted by \code{\link[lavaan:lavaan]{lavaan::lavaan()}} and
form its nonparametric bootstrap confidence interval.
}
\details{
\code{\link[=stdmod_lavaan]{stdmod_lavaan()}} accepts a \link[lavaan:lavaan-class]{lavaan::lavaan} object, the
structural equation model output returned
by \code{\link[lavaan:lavaan]{lavaan::lavaan()}} and its wrappers (e.g, \code{\link[lavaan:sem]{lavaan::sem()}}) and computes
the standardized moderation effect using the formula in the appendix of
Cheung, Cheung, Lau, Hui, and Vong (2022).

The standard deviations of the independent variable, moderator, and outcome
variable are computed from the implied covariance matrix returned by
\code{\link[lavaan:lavInspect]{lavaan::lavInspect()}}. Therefore, models fitted to data sets with missing
data (e.g., with \code{missing = "fiml"}) are also supported.

If nonparametric bootstrap confidence interval is requested with \code{R}
bootstrap samples, the model will be fitted \code{R} times to these samples,
and the standardized
moderation effect will be computed in each sample. This ensures that all
components used in the computation, including the standard deviations, are
also computed from the bootstrapping samples.

Note that the computation can be slow because \code{\link[lavaan:lavaan]{lavaan::lavaan()}}
will be called
\code{R} times.
}
\examples{

# Load a test data of 500 cases
# It has one predictor (iv), one moderator (mod), two covariates (v1 and v2),
# and one dv (dv). All variables continuous.
dat <- test_x_1_w_1_v_2_n_500
library(lavaan)
# Scale down some variables to facilitate optimization in lavaan.
dat$dv <- (dat$dv - 6500)/1100
dat$mod <- (dat$mod - 95)/5
dat$iv <- (dat$iv - 10)
# Form the product term for the moderation
dat$iv_mod <- dat$iv * dat$mod

mod <-
"
dv ~ iv + mod + mod + v1 + v2 + iv_mod
"
fit <- sem(mod, dat)
coef(fit)

# Compute the standardized moderation effect
out_noboot <- stdmod_lavaan(fit = fit, x = "iv",
                                y = "dv",
                                w = "mod",
                                x_w = "iv_mod")
out_noboot$stdmod

# Compute the standardized moderation effect and
# its confidence interval based on nonparametric bootstrapping
set.seed(8479075)
system.time(out_boot <- stdmod_lavaan(fit = fit, x = "iv",
                                y = "dv",
                                w = "mod",
                                x_w = "iv_mod",
                          boot_ci = TRUE, R = 50))
# In real analysis, R should be at least 2000.
out_boot$ci

# Use boot.ci to compute the confidence interval using other settings
library(boot)
boot.ci(out_boot$boot_out, conf = .90, type = "perc")

}
\references{
Cheung, S. F., Cheung, S.-H., Lau, E. Y. Y., Hui, C. H., & Vong, W. N.
(2022) Improving an old way to measure moderation effect in standardized
units. Advance online publication. \emph{Health Psychology}.
\doi{10.1037/hea0001188}
}
\author{
Shu Fai Cheung \url{https://orcid.org/0000-0002-9871-9448}
}
